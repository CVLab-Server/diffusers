FROM ubuntu:22.04

# Prevent interactive prompts during installation
ENV DEBIAN_FRONTEND=noninteractive

# Set CUDA version
ENV CUDA_VERSION=12.1.0
ENV CUDNN_VERSION=8.9.2.26

# Update and install basic packages
RUN apt-get update && apt-get install -y \
    wget \
    curl \
    git \
    ca-certificates \
    software-properties-common \
    gnupg \
    lsb-release \
    python3-pip \
    python3-dev \
    && rm -rf /var/lib/apt/lists/*

# Add NVIDIA package repositories
RUN wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-keyring_1.1-1_all.deb && \
    dpkg -i cuda-keyring_1.1-1_all.deb && \
    rm cuda-keyring_1.1-1_all.deb

# Install CUDA and cuDNN
RUN apt-get update && apt-get install -y \
    cuda-toolkit-12-1 \
    libcudnn8=${CUDNN_VERSION}-1+cuda12.1 \
    libcudnn8-dev=${CUDNN_VERSION}-1+cuda12.1 \
    && rm -rf /var/lib/apt/lists/*

# Set CUDA environment variables
ENV PATH=/usr/local/cuda-12.1/bin:${PATH}
ENV LD_LIBRARY_PATH=/usr/local/cuda-12.1/lib64:${LD_LIBRARY_PATH}
ENV CUDA_HOME=/usr/local/cuda-12.1

# Upgrade pip
RUN python3 -m pip install --upgrade pip

# Install PyTorch with CUDA support
RUN pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121

# Install diffusers and dependencies with numpy version fix
RUN pip3 install --no-cache-dir \
    "numpy<2.0" \
    diffusers \
    transformers \
    accelerate \
    safetensors \
    invisible-watermark>=0.2.0 \
    huggingface-hub

WORKDIR /usr/src

# Copy the entire project to /usr/src
COPY . /usr/src/

# Download the SDXL model during build
RUN python3 -c "import torch; from diffusers import StableDiffusionXLPipeline; print('Downloading SDXL model...'); pipeline = StableDiffusionXLPipeline.from_pretrained('stabilityai/stable-diffusion-xl-base-1.0', torch_dtype=torch.float16, variant='fp16', use_safetensors=True); print('Model downloaded successfully!')"

CMD ["/bin/bash"]